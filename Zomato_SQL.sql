
------Zomato_Data_Analysis--------

create database Zomato_Data_Analysis

select * from [dbo].[restaurants_data]

select * from [dbo].[orders]

select * from [dbo].[deliveries]

select * from [dbo].[riders]

select * from [dbo].[customers]

--adding constraints

alter table orders
add constraint fk_customer
foreign key (customer_id)
references customers(customer_id)

alter table orders
add constraint fk_restaurant
foreign key (restaurant_id)
references restaurants_data(restaurant_id)

alter table deliveries
add constraint fk_order
foreign key (order_id)
references orders(order_id)

alter table deliveries
add constraint fk_riders
foreign key (rider_id)
references riders(rider_id)


-------* EDA *---------

--Check Null Values in all table
select count(*) from customers 
where 
	customer_id is null
	or
	customer_name is null
	or
	reg_date is null



select count(*) from restaurants_data 
where 
	restaurant_id is null
	or
	restaurant_name is null
	or
	city is null
	or
	opening_hours is null

select count(*) from orders
where 
	order_id is null
	or
	customer_id is null
	or
	restaurant_id is null
	or
	order_item is null
	or
	order_date is null
	or 
	order_time is null
	or
	order_status is null
	or
	total_amount is null


select count(*) from deliveries 
where 
	delivery_id is null
	or
	order_id is null
	or
	delivery_status is null
	or
	delivery_time is null
	or
	rider_id is null


select count(*) from riders 
where 
	rider_id is null
	or
	rider_name is null
	or
	sign_up_date is null


--delete null records

delete from riders
where 
	rider_id is null
	or
	rider_name is null
	or
	sign_up_date is null

--likewise we can remove null values from table

--in this all table there is no null values present

--change time format
ALTER TABLE deliveries
ALTER COLUMN delivery_time TIME(0);

ALTER TABLE orders
ALTER COLUMN order_time TIME(0)

--convert total amount up to 2 decimal number
ALTER TABLE orders
ALTER COLUMN total_amount decimal(10,2)




---------* Analysis and Reporting *---------

select * from orders
--Q1. Write a query to find the top 5  most frequently ordered dishes by customer  in the last  year
select 
	top(5) o.order_item,
	c.customer_id,
	c.customer_name,
	count(*) as [Total_Orders]
from 
orders as o
join
customers as c
on 
c.customer_id=o.customer_id
where
	o.order_date >= DATEADD(YEAR, -2, GETDATE())
group by 
	o.order_item ,
	c.customer_id,
	c.customer_name
order by 
	Total_Orders desc


select  DATEADD(YEAR, -1, GETDATE())


--Q2. find the total number of orders placed  from each city

select 
	rst.city,
	count(o.order_id) as [total_orders]
from
	restaurants_data as rst
join
	orders as o
on
	rst.restaurant_id = o.restaurant_id
group by rst.city
order by total_orders

--Q3. find the number of orders per customer
select
	c.customer_id,
	c.customer_name,
	count(o.order_id) as [total_orders]
from
	customers as c
left join
	orders as o
on
	c.customer_id = o.customer_id
group by c.customer_id, c.customer_name
order by total_orders desc

--Q4. Total revenue generated by each restaurant
select
	r.restaurant_name,
	sum(total_amount) as [total revenue]
from
	restaurants_data as r
left join
	orders as o
on 
	r.restaurant_id = o.restaurant_id
group by r.restaurant_name
order by [total revenue] desc

--Q5. Count of orders based on status
select 
	order_status,
	count(*) as [orders]
from orders
group by order_status

--Q6. find the number of orders month wise
select distinct FORMAT(order_date, 'yyyy-MM') as month from orders

select 
	FORMAT(order_date, 'yyyy-MM') as month,
	count(order_id) as [total_orders]
from orders
group by FORMAT(order_date, 'yyyy-MM')
order by month

--Q7. find avg time taken by each rider to deliver
select
	r.rider_name,
	avg(DATEDIFF(MINUTE, o.order_time, d.delivery_time)) as [avg_delivery_minute]
from
	deliveries as d
join
	riders as r
ON 
	d.rider_id= r.rider_id
join 
	orders as o
ON
	d.order_id = o.order_id
group by r.rider_name
order by avg_delivery_minute

--Q8. Most Active Rider
select
	r.rider_id,
	count(d.delivery_id) as [Total_deliveries]
from
	deliveries as d
join 
	riders as r
on
	d.rider_id = r.rider_id
group by r.rider_id
order by Total_deliveries desc

--Q9. Delivery Success rate by rider
select
	r.rider_id,
	sum(
	case 
		when d.delivery_status='Delivered' then 1
		else 0
	end 
	) * 100 / count(*)  as [success_rate_%]
from 
	deliveries as d
join
	riders as r
on
	d.rider_id=r.rider_id
group by r.rider_id
order by [success_rate_%] desc

--Q10. identify which hour  of the day is busiest
select 
	DATEPART(HOUR,order_time) as [order_hr],
	count(order_id) as [total_orders]
from orders
group by DATEPART(HOUR,order_time)
order by total_orders desc

--Q11. find customer who have ordered  more than 3 time
select
	c.customer_name,
	count(order_id) as [total_orders]
from
	customers as c
join
	orders as o
on
	c.customer_id = o.customer_id
group by c.customer_name
having count(order_id) >3
order by total_orders desc


--Q12. Most Profitable city
select
	distinct r.city,
	sum(o.total_amount) as [total_revenue]
from
	restaurants_data as r
join 
	orders as o
on r.restaurant_id=o.restaurant_id
group by r.city
order by total_revenue desc

--Q13. Peak day or the week for orders
select 
	DATENAME(WEEKDAY,order_date) as [day_of_week],
	count(order_id) as [total_orders]
from orders
group by DATENAME(WEEKDAY,order_date)
order by total_orders desc

--Q14. Cancelled orders by the restaurants 
select * from restaurants_data

select 
	r.restaurant_name,
	count(*) as [cancelled orders]	
from
	restaurants_data as r
join
	orders as o
on
	r.restaurant_id = o. restaurant_id
where o.order_status='cancelled'
group by r.restaurant_name
order by [cancelled orders] desc

	




